@page "/personas/editar/{PersonaId:int}"
@inject IRepository repository
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager

<h3>EditarPersona</h3>

@if (Persona == null)
{
    <textarea>Cargando...</textarea>
}
else
{
    <FormularioPersonas Persona="Persona" OnValidSubmit="Editar" />
}


@code {
    [Parameter] public int PersonaId { get; set; }
    Persona Persona;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repository.Get<Persona>($"api/personas/{PersonaId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("personas");
            }
            else
            {
                await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Persona = httpResponse.Response;
        }

    }

    private async Task Editar()
    {
        var httpResponse = await repository.Put("api/personas", Persona);
        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("personas");
        }
    }
}
